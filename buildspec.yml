# version: 0.2

# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
#       - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
#       - aws configure set region us-east-2
#       - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 489994096722.dkr.ecr.us-east-2.amazonaws.com
#       - REPO_URI=489994096722.dkr.ecr.us-east-2.amazonaws.com/my-ecr-repo2
#       - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

#   build:
#     commands:
#       - echo Building the Docker image...
#       - docker build -t $REPO_URI:latest .
#       - docker tag $REPO_URI:latest $REPO_URI:$IMAGE_TAG

#   post_build:
#     commands:
#       - echo Pushing Docker image to Amazon ECR...
#       - docker push $REPO_URI:latest
#       - docker push $REPO_URI:$IMAGE_TAG
#       - echo Writing image definitions file...
#       - printf '[{"name":"my-container","imageUri":"%s"}]' "$REPO_URI:$IMAGE_TAG" > imagedefinitions.json

# artifacts:
#   files: imagedefinitions.json

version: 0.2

env:
  variables:
    AWS_REGION: "us-east-2"
    ECR_REPO_URL: "489994096722.dkr.ecr.us-east-2.amazonaws.com/my-ecr-repo"

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO_URL
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $ECR_REPO_URL:latest .
      - docker tag $ECR_REPO_URL:latest $ECR_REPO_URL:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing the Docker image to Amazon ECR..."
      - docker push $ECR_REPO_URL:latest
      - docker push $ECR_REPO_URL:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - printf '[{"name":"my-container","imageUri":"%s"}]' "$ECR_REPO_URL:$IMAGE_TAG" > imagedefinitions.json
      - echo "Updating ECS service..."
      - aws ecs update-service --cluster nginx-cluster99 --service nginx-service22 --force-new-deployment

artifacts:
  files:
    - imagedefinitions.json
